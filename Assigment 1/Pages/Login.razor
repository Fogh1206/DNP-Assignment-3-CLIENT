@page "/login"
@using Assigment_1.Data
@using System.Threading
@namespace LoginComponent
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div>
            <label>User name:</label> <input type="text" placeholder="user name" @bind-value="username"/>
        </div>
        <div>
            <label>Password:</label> <input type="password" placeholder="password" @bind-value="password"/>
        </div>
        <div style="color:red">@errorMessage</div>
        <a href="" @onclick="PerformLogin"> Login </a>
        <a href="" @onclick="PerformRegister"> Register </a>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout"> Log out, @context.User.Identity.Name </a>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            //Thread.Sleep(10);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/fetchdata");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

    private void PerformRegister()
    {
        NavigationManager.NavigateTo("/register");
    }

}